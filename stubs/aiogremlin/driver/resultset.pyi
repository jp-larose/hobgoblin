from aiogremlin import exception as exception
from typing import Any

def error_handler(fn: Any): ...

class ResultSet:

    def __init__(self, request_id: Any, timeout: Any, loop: Any) -> None: ...

    @property
    def request_id(self): ...

    @property
    def stream(self): ...

    def queue_result(self, result: Any) -> None: ...

    @property
    def done(self): ...

    @property
    def aggregate_to(self): ...

    @aggregate_to.setter
    def aggregate_to(self, val: Any) -> None: ...

    def __aiter__(self): ...

    async def __anext__(self): ...

    def close(self) -> None: ...

    async def one(self): ...

    async def all(self): ...
